//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.12

use super::sea_orm_active_enums::AssignmentStatus;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "task_assignment")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub agent_id: Uuid,
    pub task_id: Uuid,
    pub assignment_status: AssignmentStatus,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::physical_agent::Entity",
        from = "Column::AgentId",
        to = "super::physical_agent::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    PhysicalAgent,
    #[sea_orm(
        belongs_to = "super::task::Entity",
        from = "Column::TaskId",
        to = "super::task::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Task,
}

impl Related<super::physical_agent::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PhysicalAgent.def()
    }
}

impl Related<super::task::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Task.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
