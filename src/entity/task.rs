//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.12

use super::sea_orm_active_enums::TaskStatus;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "task")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub source: String,
    pub result: Option<String>,
    pub shots: Option<i32>,
    pub exec_shots: Option<i32>,
    pub v_exec_shots: Option<i32>,
    pub depth: Option<i32>,
    pub status: TaskStatus,
    pub created_time: DateTime,
    pub updated_time: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::task_assignment::Entity")]
    TaskAssignment,
}

impl Related<super::task_assignment::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TaskAssignment.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
